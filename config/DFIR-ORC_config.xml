<?xml version="1.0" encoding="utf-8"?>
<wolf childdebug="no" command_timeout="600">
    <log disposition="truncate">ORCSYS_{SystemType}_{FullComputerName}_{TimeStamp}.log</log>

	<!--The archives order define the real execute order.
	    If you want, you can put the memory dump at another place but at the 1st
		you will not have any trace of the ORCSYS and ORC YARA execution
		-->
	<!--Without the optional parameter set to yes ... optional="yes" to have a memory dump-->
	<!--<archive name="ORCMEM_{SystemType}_{FullComputerName}_{TimeStamp}_Memory.7z" keyword="Memory" concurrency="2" repeat="Once" compression="fast" archive_timeout="240" optional="yes">-->
	<archive name="ORCMEM_{SystemType}_{FullComputerName}_{TimeStamp}_Memory.7z" keyword="Memory" concurrency="2" repeat="Once" compression="fast" archive_timeout="240">
		<restrictions JobMemoryLimit="3G" ProcessMemoryLimit="3G" ElapsedTimeLimit="240"/>

		<!--GetMemory command to use "winpmem.exe output -" stream to StdOut -->
		<command keyword="GetMemory">
			<execute name="winpmem.exe" run="7z:#Tools|winpmem.exe"/>
			<argument>--output -</argument>
			<output name="Memory_{FullComputerName}_{TimeStamp}.aff4" source="StdOut"/>
			<output name="Winpmem.log" source="StdErr"/>
		</command>
		
		<command keyword="GetMemFiles">
			<execute name="DFIR-Orc.exe" run="self:#GetThis"/>
			<argument>/config=res:#GetMemFiles_config.xml</argument>
			<output name="GetMemFiles.7z" source="File" argument="/out={FileName}"/>
			<output name="GetPageFile.log" source="StdOutErr"/>
		</command>
	</archive>
	<!--ORCSYS config-->
    <archive name="ORCSYS_{SystemType}_{FullComputerName}_{TimeStamp}_Main.7z" keyword="Main" concurrency="2" repeat="Once" compression="fast">
        <restrictions JobMemoryLimit="3G" ProcessMemoryLimit="2G" ElapsedTimeLimit="360"/>

		<!--If the optional argument is set to "yes" then
		    by default will not be executed.
			You need to add /+key={command keywords} when you
			launch DFIR-ORC-->
        <command keyword="SystemInfo">
            <execute name="systeminfo.exe" run="%windir%\System32\systeminfo.exe"/>
            <argument>/FO csv</argument>
            <output name="Systeminfo.csv" source="StdOutErr"/>
        </command>

        <command keyword="Processes" winver="6.1+">
            <execute name="powershell" run="%SystemRoot%\System32\WindowsPowerShell\V1.0\powershell.exe"/>
            <argument>-NonInteractive -WindowStyle Hidden</argument>
            <argument>Get-WMIObject win32_process | Export-Csv -NoTypeInformation -Encoding UTF8</argument>
            <output name="processes.csv" source="File" argument="-Path {FileName}"/>
            <output name="processes.log" source="StdOutErr"/>
        </command>

        <command keyword="GetEvents">
            <execute name="DFIR-ORC.exe" run="self:#GetThis"/>
            <argument>/config=res:#GetEvents_config.xml</argument>
            <output name="Event.7z" source="File" argument="/out={FileName}"/>
            <output name="Event.log" source="StdOutErr"/>
        </command>

        <command keyword="Autoruns">
            <execute name="autorunsc.exe" run="7z:#Tools|autorunsc.exe"/>
            <argument>-a * -c -h -m -s -t -accepteula</argument>
            <output name="autoruns.csv" source="StdOut"/>
            <output name="autoruns.log" source="StdErr"/>
        </command>

        <command keyword="NTFSInfo" queue="flush">
            <execute name="DFIR-ORC.exe" run="self:#NTFSInfo"/>
            <argument>/config=res:#NTFSInfo_config.xml</argument>
            <output name="NTFSInfo_SecDesc.7z" source="File" argument="/SecDescr={FileName}"/>
            <output name="NTFSInfo_i30Info.7z" source="File" argument="/i30info={FileName}"/>
            <output name="NTFSInfo.7z" source="File" argument="/out={FileName}"/>
            <output name="NTFSInfo.log" source="StdOutErr"/>
        </command>

		<!--Optional parameter set "yes", not execute by default-->
        <command keyword="NTFSInfoHashPE" queue="flush" optional="yes">
            <execute name="DFIR-ORC.exe" run="self:#NTFSInfo"/>
            <argument>/config=res:#NTFSInfoHashPE_config.xml</argument>
            <output name="NTFSInfoHashPE_SecDesc.7z" source="File" argument="/SecDescr={FileName}"/>
            <output name="NTFSInfoHashPE.7z" source="File" argument="/out={FileName}"/>
            <output name="NTFSInfoHashPE.log" source="StdOutErr"/>
        </command>

        <command keyword="FatInfo">
            <execute name="DFIR-Orc.exe" run="self:#FatInfo"/>
            <argument>/config=res:#FatInfo_config.xml</argument>
            <output name="FatInfo.7z" source="File" argument="/out={FileName}"/>
            <output name="FatInfo.log" source="StdOutErr"/>
        </command>

		<!--Optional parameter set "yes", not execute by default-->
        <command keyword="FatInfoHashPE"  optional="yes">
            <execute name="DFIR-Orc.exe" run="self:#FatInfo"/>
            <argument>/config=res:#FatInfoHashPE_config.xml</argument>
            <output name="FatInfoHashPE.7z" source="File" argument="/out={FileName}"/>
            <output name="FatInfoHashPE.log" source="StdOutErr"/>
        </command>

        <command keyword="USNInfo" queue="flush">
            <execute name="DFIR-Orc.exe" run="self:#USNInfo"/>
            <argument>*</argument>
            <output name="USNInfo.7z" source="File" argument="/out={FileName}"/>
            <output name="USNInfo.log" source="StdOutErr"/>
        </command>

        <command keyword="GetArtefacts">
            <execute name="DFIR-Orc.exe" run="self:#GetThis"/>
            <argument>/config=res:#GetArtefacts_config.xml</argument>
            <output name="Artefacts.7z" source="File" argument="/out={FileName}"/>
            <output name="Artefacts.log" source="StdOutErr"/>
        </command>

        <command keyword="GetSystemHives">
            <execute name="DFIR-Orc.exe" run="self:#GetThis"/>
            <argument>/config=res:#GetSystemHives_config.xml</argument>
            <output name="SystemHives.7z" source="File" argument="/out={FileName}"/>
            <output name="SystemHives.log" source="StdOutErr"/>
        </command>

        <command keyword="GetUserHives">
            <execute name="DFIR-Orc.exe" run="self:#GetThis"/>
            <argument>/config=res:#GetUserHives_config.xml</argument>
            <output name="UserHives.7z" source="File" argument="/out={FileName}"/>
            <output name="UserHives.log" source="StdOutErr"/>
        </command>

        <command keyword="GetSamHive">
            <execute name="DFIR-Orc.exe" run="self:#GetThis"/>
            <argument>/config=res:#GetSamHive_config.xml</argument>
            <output name="SAM.7z" source="File" argument="/out={FileName}"/>
            <output name="SAM.log" source="StdOutErr"/>
        </command>

    </archive>

	<!--ORCYARA config optional does not execute by default optional="yes" parameter set-->
    <archive name="ORCYARA_{SystemType}_{FullComputerName}_{TimeStamp}_Yara.7z" keyword="Yara" concurrency="2" repeat="Once" compression="fast" archive_timeout="240" optional="yes">
        <restrictions JobMemoryLimit="3G" ProcessMemoryLimit="3G" ElapsedTimeLimit="240"/>

        <command keyword="GetYara">
            <execute name="DFIR-Orc.exe" run="self:#GetThis"/>
            <argument>/config=res:#GetYaraSamples_config.xml</argument>
            <output name="Yara.7z" source="File" argument="/out={FileName}"/>
            <output name="Yara.log" source="StdOutErr"/>
        </command>

    </archive>
</wolf>
